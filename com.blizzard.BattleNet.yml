app-id: com.blizzard.BattleNet
runtime: org.freedesktop.Platform
runtime-version: '23.08'
sdk: org.freedesktop.Sdk
# command: wine BattleNet.exe
# rename-desktop-file: com.blizzard.BattleNet.desktop
# rename-icon: BattleNet
finish-args:
  - --device=all
  # the file picker uses portals but the set
  # game directory feature still needs this
  - --filesystem=host:ro
  - --socket=pulseaudio
  - --env=QT_QPA_PLATFORM=xcb
  - --socket=x11
  - --share=network
  - --share=ipc
  # required for the emulated bluetooth adapter feature to work.
  - --allow=bluetooth
  - --filesystem=xdg-run/app/com.discordapp.Discord:create
  - --talk-name=org.freedesktop.ScreenSaver
  # required for Gamescope on Steam Deck
  - --filesystem=xdg-run/gamescope-0:ro
modules:
  # - shared-modules/gtk2/gtk2.json
  # - name: gtk2

  # - shared-modules/libusb/libusb.json
  # - name: libusb

  # # enables motion controls on non-wii controllers (switch, ps4, etc)
  # # requires a udev rule enabling Motion Sensors access
  # - name: libevdev
  #   buildsystem: meson
  #   config-opts:
  #     - -Dtests=disabled
  #     - -Ddocumentation=disabled
  #   sources:
  #     - type: archive
  #       url: https://www.freedesktop.org/software/libevdev/libevdev-1.13.1.tar.xz
  #       sha256: 06a77bf2ac5c993305882bc1641017f5bec1592d6d1b64787bad492ab34f2f36
  #       x-checker-data:
  #         type: anitya
  #         project-id: 20540
  #         stable-only: true
  #         url-template: https://www.freedesktop.org/software/libevdev/libevdev-$version.tar.xz

  # # needed for screensaver inhibition
  # - name: xdg-screensaver-shim
  #   buildsystem: meson
  #   sources:
  #     - type: archive
  #       url: https://github.com/Unrud/xdg-screensaver-shim/archive/0.0.2.tar.gz
  #       sha256: 0ed2a69fe6ee6cbffd2fe16f85116db737f17fb1e79bfb812d893cf15c728399

  # # The forked dolphin version Project Plus uses preloaded with the Project Plus sd.raw card and .dol Launcher files
  # - name: ishiiruka
  #   buildsystem: cmake
  #   config-opts:
  #     # - -DLINUX_LOCAL_DEV=true # This flag makes Dolphin/Ishiiruka look for the Sys directory in the same directory as the binary and the repo we are pulling from places the Sys directory there by default (if this is turned off make sure the Sys directory is being moved to /app/share/ishiiruka/sys instead)
  #     - -DCMAKE_BUILD_TYPE=Release
  #     - -DENABLE_SDL=ON
  #     - -DENABLE_EVDEV=ON
  #     - -DDISTRIBUTOR=Flathub
  #   cleanup:
  #     - /share/man
  #   sources:
  #     # Project Plus Ishiiruka/Dolphin emulator fork
  #     - type: git
  #       url: https://github.com/jlambert360/Ishiiruka.git
  #       commit: eec8c7fdfc62efd1555a9bc671cb48533fed439c

  #     # Move wx files into source
  #     - type: shell
  #       commands:
  #         - |
  #           echo "Moving wx files into source"
  #           cp Externals/wxWidgets3/include/wx Source/Core/ -r
  #           cp Externals/wxWidgets3/wx/* Source/Core/wx/

  #     # Copy gdkconfig.h from previously installed gtk2 above to an included directory otherwise making will complain about not being able to find either gdkconfig.h or gtk/gtk.h
  #     - type: shell
  #       commands:
  #         - |
  #           echo "Copying /app/lib/gtk-2.0/include/gdkconfig.h to /app/include/gtk-2.0/gdkconfig.h"
  #           cp /app/lib/gtk-2.0/include/gdkconfig.h /app/include/gtk-2.0/gdkconfig.h

  #     # Patches Source/Core/UICommon/UICommon.cpp to check if in a Flatpak sandbox and set data, config, and cache paths correctly
  #     - type: patch
  #       path: detectflatpak.patch

  #     # Patches Source/Core/Core/WiiRoot.cpp to change ReplayData patch to be inside Flatpak at /var/data/FasterPPlus/Wii/ReplayData (~/.var/app/com.projectplusgame.ProjectPlus/data/FasterPPlus/Wii/ReplayData)
  #     - type: patch
  #       path: replaydata.patch

  #     # Patches Data/User/Config/Dolphin.ini to set proper paths, graphics backend, and audio backend
  #     - type: patch
  #       path: dolphinini.patch

  #     # Patches Data/User/Config/GFX.ini to set FullAsyncShaderCompilation false (crashes on Linux), and Tessellation false (not supported Linux)
  #     - type: patch
  #       path: gfxini.patch

  #     # Project Plus SD card
  #     - type: file
  #       url: https://github.com/jlambert360/FPM-AppImage/releases/download/v2.5.2/sd.tar.gz
  #       sha256: 121d08f8fcbf2fc24d5b48481f387398f24be30de3eb66fb510cb9f5a67f4657 # This is the hash of the tar.gz file not the uncompressed

  #     # Project Plus .dol files and icon
  #     - type: archive
  #       url: https://github.com/jlambert360/FPM-AppImage/releases/download/v2.5.2/Launcher.tar.gz
  #       sha256: 1b9dce2fb0eac3ad8cc809826b3b6bfd4ce30dbfc394eaa586e35dcd356fd189 # This is the hash of the tar.gz file not the uncompressed
  #       dest: Launcher

  #     # Metadata file for Flatpak repos
  #     - type: file
  #       path: com.projectplusgame.ProjectPlus.metainfo.xml

  #     # The script that is run when the Flatpak is started everytime
  #     - type: script
  #       commands:
  #         - |
  #           # Setup Discord rich presence
  #           echo "Setting up Discord rich presence"
  #           for i in {0..9}; do
  #             test -S $XDG_RUNTIME_DIR/discord-ipc-$i ||
  #               ln -sf {app/com.discordapp.Discord,$XDG_RUNTIME_DIR}/discord-ipc-$i;
  #           done

  #           # This is a bit of a hacky way to get the sd.raw, Launcher directory, and patched Dolphin.ini/GFX.ini into the Flatpak user var directory, because the installation directory for Flatpaks is not writable and so we cannot use portable.txt + the User directory beside the binary
  #           echo "Make directory /var/data/FasterPPlus/Wii (~/.var/app/com.projectplusgame.ProjectPlus/data/FasterPPlus/Wii) if it doesn't exist"
  #           mkdir -p /var/data/FasterPPlus/Wii

  #           echo "Make directory /var/config/FasterPPlus/ (~/.var/app/com.projectplusgame.ProjectPlus/config/FasterPPlus) if it doesn't exist"
  #           mkdir -p /var/config/FasterPPlus

  #           # Create and set variables for the system and user SD card creation dates
  #           SystemSDCardCreationDate=`stat --format="%W" /app/share/ishiiruka/sys/Wii/sd.raw`
  #           UserSDCardCreationDate=`stat --format="%W" /var/data/FasterPPlus/Wii/sd.raw`

  #           # Check if the system SD card creation date is newer than the user SD card creation date (There has been an update), or there is no user SD card
  #           echo "Checking if there is a newer SD card version"
  #           if [ $SystemSDCardCreationDate -gt ${UserSDCardCreationDate:=0} ];
  #           then
  #             # Move newer SD card to user data directory
  #             echo "Moving newer SD card to user data directory"
  #             mv /app/share/ishiiruka/sys/Wii/sd.raw /var/data/FasterPPlus/Wii/sd.raw
  #           else
  #             echo "SD card is already at latest version"
  #           fi

  #           echo "Copy /app/share/ishiiruka/sys/Wii/Launcher (/var/lib/flatpak/app/com.projectplusgame.ProjectPlus/current/active/files/share/ishiiruka/sys/Wii/Launcher) to /var/data/FasterPPlus/Wii (~/.var/app/com.projectplusgame.ProjectPlus/data/FasterPPlus/Wii) if it doesn't already exist"
  #           cp -nr /app/share/ishiiruka/sys/Wii/Launcher /var/data/FasterPPlus/Wii

  #           echo "Copy user config /app/share/ishiiruka/user/Config/Dolphin.ini and GFX.ini (/var/lib/flatpak/app/com.projectplusgame.ProjectPlus/current/active/files/share/ishiiruka/user/Config/Dolphin.ini) to /var/config/FasterPPlus/Dolphin.ini and GFX.ini (~/.var/app/com.projectplusgame.ProjectPlus/config/FasterPPlus/Dolphin.ini and GFX.ini) if they don't already exist"
  #           cp -n /app/share/ishiiruka/user/Config/Dolphin.ini /var/config/FasterPPlus/Dolphin.ini
  #           cp -n /app/share/ishiiruka/user/Config/GFX.ini /var/config/FasterPPlus/GFX.ini

  #           # Launch ishiiruka binary
  #           ishiiruka "$@"
  #       dest-filename: ishiiruka-wrapper

  #   post-install:
  #     # Install ishiiruka-wrapper script
  #     - |
  #       echo "Installing ishiiruka-wrapper in /app/bin/"
  #       install -D -t /app/bin/ ishiiruka-wrapper

  #     # Change exec of desktop file to launch ishiiruka-wrapper instead of ishiiruka
  #     - |
  #       echo "Changing exec of /app/share/applications/faster-project-plus.desktop file to launch ishiiruka-wrapper instead of ishiiruka"
  #       desktop-file-edit --set-key=Exec --set-value='/app/bin/ishiiruka-wrapper' /app/share/applications/faster-project-plus.desktop

  #     # Install metainfo file in Flatpak
  #     - |
  #       echo "Installing com.projectplusgame.ProjectPlus.metainfo.xml in /app/share/metainfo/"
  #       install -Dm644 -t /app/share/metainfo/ com.projectplusgame.ProjectPlus.metainfo.xml

  #     # Move /app/bin/Sys to /app/share/ishiiruka/sys (only use this without the -DLINUX_LOCAL_DEV=true flag set in config-opts)
  #     - |
  #       echo "Moving /app/bin/Sys to /app/share/ishiiruka/sys"
  #       mv /app/bin/Sys /app/share/ishiiruka/sys

  #     # Extract and move sd.tar.gz to /app/share/ishiiruka/sys/Wii
  #     - |
  #       echo "Extracting and moving sd.tar.gz to /app/share/ishiiruka/sys/Wii"
  #       tar -xf sd.tar.gz -C /app/share/ishiiruka/sys/Wii

  #     # Move Launcher directory with .dol files and icon to /app/share/ishiiruka/sys/Wii
  #     - |
  #       echo "Moving Launcher directory to /app/share/ishiiruka/sys/Wii"
  #       mv Launcher /app/share/ishiiruka/sys/Wii
